# {{ ansible_managed }}

[global_tags]
  dc = "{{ managed_region }}"

[agent]
  interval = "15s"
  round_interval = true

  metric_batch_size = 1000
  metric_buffer_limit = 10000

  collection_jitter = "2s"

  flush_interval = "30s"
  flush_jitter = "5s"

  precision = ""

  ## Logging configuration:
  debug = false
  quiet = false
  ## Specify the log file name. The empty string means to log to stderr.
  logfile = ""

  ## Override default hostname, if empty use os.Hostname()
  hostname = "{{ inventory_hostname }}"
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

[[outputs.influxdb]]
  urls = ["http://{{ tick_monitor.influxdb.ip }}:8086"] # required
  database = "telegraf" # required

  retention_policy = ""
  write_consistency = "any"

  timeout = "5s"

# Publish all metrics to /metrics for Prometheus to scrape
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  expiration_interval = "60s"
  string_as_label = true

###############################################################################
#                            PROCESSOR PLUGINS                                #
###############################################################################

# # Print all metrics that pass through this filter.
# [[processors.printer]]


###############################################################################
#                            AGGREGATOR PLUGINS                               #
###############################################################################

# # Keep the aggregate min/max of each metric passing through.
# [[aggregators.minmax]]
#   ## General Aggregator Arguments:
#   ## The period on which to flush & clear the aggregator.
#   period = "30s"
#   ## If true, the original metric will be dropped by the
#   ## aggregator and will not get sent to the output plugins.
#   drop_original = false


###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false


[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay"]


[[inputs.diskio]]


# Get kernel statistics from /proc/stat
[[inputs.kernel]]
#[[inputs.kernel_vmstat]]


[[inputs.mem]]


[[inputs.processes]]


[[inputs.swap]]


[[inputs.system]]


[[inputs.chrony]]
#  dns_lookup = false


[[inputs.net]]
    interfaces = ["eth*", "en*", "em*", "tun[0-9]", "br[0-9]", "team*", "docker*", "lo0"]

# Read TCP metrics such as established, time wait and sockets counts.
[[inputs.netstat]]
